/**
* @file 文件说明
* @author xjc
* @date
*/
<template>
  <div class="div-login-position">
    <div v-if="isRegister" class="login-logo-top">
      <img :src="loginLogo">
    </div>
    <div>
      <my-filed v-model="loginParam.username" placeholder="请输入手机号码" label="手机号" tipContent="请输入11位手机号码！" :tipRegulation="usernameRegulation"></my-filed>
      <my-filed class="marginTop15" v-model="loginParam.password" type="password" placeholder="请输入密码" label="设置密码"
                tipContent="请输入6位字母和数字的组合！"
                :tipRegulation="passwordRegulation"></my-filed>
      <my-filed class="marginTop15" v-model="loginParam.repeatPassword" type="password" placeholder="请输入密码" label="重复密码"
                tipContent="再次输入密码！"
                :tipRegulation="repeatpasswordRegulation"></my-filed>
      <my-filed class="marginTop15"
                v-model="loginParam.imageCode"
                placeholder="请输入图形码"
                label="图形码"
                :classObj="{input: 'check-code'}">
        <graphic-code></graphic-code>
      </my-filed>
      <my-filed class="marginTop15"
                v-model="loginParam.code"
                type="password"
                placeholder="请输入验证码"
                label="验证码"
                :classObj="{input: 'check-code'}">
        <count-down text="获取验证码" @handleTime="handleTime"></count-down>
      </my-filed>
    </div>
    <div class="login-btn">
      <div class="demo-flat-button toRight" @click="onLogin">{{isRegister ? '注册' : '提交'}}</div>
    </div>
  </div>
</template>

<script>
  import countDown from './count-down'
  import graphicCode from '@/components/login/graphic-code'
  export default {
    name: '',
    components: {countDown, graphicCode},
    data () {
      return {
        loginLogo: '/static/img/user_img_m.png',
        isRegister: true,
        loginParam: {
          username: '',
          code: '',
          password: '',
          repeatPassword: ''
        }
      }
    },
    computed: {},
    created () {
      this.isRegister = this.$route.name === 'register'
    },
    mounted () {},
    methods: {
      onLogin () {
        this.turnTo('home')
      },
      handleTime () {},
      usernameRegulation (t) {
        return t.length === 11 && /^1\d{10}$/.test(t)
      },
      passwordRegulation (t) {
        return t.length === 6 && /^[a-zA-Z0-9]{6}$/.test(t)
      },
      repeatpasswordRegulation (t) {
        return t === (function () {
          return this.loginParam.password
        }.call(this))
      }
    }
  }
</script>

<style lang="less" rel="stylesheet/less" scoped>
  @import "../../../static/css/login.css";

  .login-btn {
    margin-top: 15%;
    .demo-flat-button {
      height: 45px;
      line-height: 45px;
      color: white;
      font-size: 16px;
      margin-top: 25px;
      border-radius: 22px;
      text-align: center;
      /*box-shadow: 0 17px 62px 0 rgba(255,142,42,0.20);*/
    }
    .toRight {
      background-image: -webkit-linear-gradient(to right, #ff7626, #ffab68);
      background-image: linear-gradient(to right, #ff7626, #ffab68);
    }
  }
</style>
