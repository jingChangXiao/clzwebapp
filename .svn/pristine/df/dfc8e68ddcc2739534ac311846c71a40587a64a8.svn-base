/**
* @file 文件说明
* @author xjc
* @date
*/
<template>
  <div>
    <content-header title="首页" right_text="编辑" @right_click="rightClick" @right_left="" hideBack=""></content-header>
    <div class="full-content homePage">
      <div class="swipe">
        <mt-swipe :auto="4000">
          <mt-swipe-item>
            <img src="/static/img/user_img_m.png" alt="">1
          </mt-swipe-item>
          <mt-swipe-item>2</mt-swipe-item>
          <mt-swipe-item>
            <img src="/static/img/user_img_w.png" alt="">3
          </mt-swipe-item>
        </mt-swipe>
      </div>
      <div class="icon-menus">
        <scroll></scroll>
      </div>
      <div class="scheduling">
        <datapicker></datapicker>
      </div>
      <div class="footer-icons">
        <div v-for="(item, index) in icons" @click="handleIcon(item, index)" :key="index" :class="{selectIcon: item.select}">
          <i class="iconfont" :class="item.icon"></i>
          <div class="icon-router">{{item.text}}</div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import datapicker from '../../components/public/datapicker'
  import scroll from '../../components/public/scroll'
  let cacheIndex
  export default {
    name: '',
    components: {datapicker, scroll},
    data () {
      return {
        icons: [
          {
            text: '首页',
            icon: 'icon-home_f',
            router: 'home',
            select: false
          },
          {
            text: '学员',
            icon: 'icon-students',
            router: 'students',
            select: false
          },
          {
            text: '排班',
            icon: 'icon-class',
            router: 'class',
            select: false
          },
          {
            text: '我的',
            icon: 'icon-user_f',
            router: 'self',
            select: false
          }
        ]
      }
    },
    created () {},
    mounted () {
      // let promise = async () => {
      //   console.log(1)
      //   await this._http.login({}).then(() => {
      //     console.log(2)
      //   }, () => {
      //     console.log(2)
      //   })
      //   console.log(3)
      // }
      // promise().then(() => {
      //   console.log(4)
      // })
    },
    methods: {
      rightClick () {
        this.$router.push('test')
      },
      handleIcon (item, index) {
        console.log(item)
        item.select = true
        if (cacheIndex !== undefined) this.icons[cacheIndex].select = false
        cacheIndex = index
      }
    }
  }
</script>

<style lang="less" rel="stylesheet/less" scoped>
  .homePage {
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    padding-bottom: 50px;
    position: relative;
    .swipe {
      height: 200px;
    }
    .icon-menus {
      width: 100%;
      height: 100px;
      background-color: #fff;
    }
    .scheduling {
      flex: auto;
    }
    .footer-icons {
      width: 100%;
      height: 50px;
      font-size: 12px;
      color: #4e4e4e;
      position: absolute;
      bottom: 0;
      left: 0;
      background-color: white;
      box-shadow: 0 0 10px 0 rgba(138, 138, 138, 0.32);
      display: flex;
      flex-direction: row;
      .selectIcon {
        color: #f38748;
      }
      > div:active {
        color: rgba(243, 135, 72, 0.79);
      }
      > div {
        flex: 1;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        box-sizing: border-box;
        padding: 0 15px;
        i {
          font-size: 25px;
        }
      }
    }
  }
</style>
